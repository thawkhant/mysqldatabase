=>Function


(i) PROCEDURE  (store procedure) 
 (a) IN = Input Parameter
 (b) OUT = Output Parameter
 (c)INOUT = Inout Parameter
(ii) FUNCTION
            (a)Default Functions (Build in)   ***Function ta ku ka return ta ku bal pyan naing dal naw
            (b)User Define Functions
                  (i) IN = Input Parameters      
______________________________________________________________________

=>FUNCTION (User Define Function)

SELECT products.name,checkouts.qty,(products.price * checkouts.qty) AS totalamount
FROM checkouts
LEFT JOIN products
ON checkouts.product_id = products.id;

=Total Amount
SELECT SUM(products.price * checkouts.qty) AS totalamount
FROM checkouts
LEFT JOIN products
ON checkouts.product_id = products.id;


DELIMITER //

     CREATE FUNCTION totalamount_fun()
     RETURNS DECIMAL                                  
     DETERMINISTIC
     BEGIN

         DECLARE totalamount DECIMAL;
         SELECT SUM(products.price * checkouts.qty) 
         into totalamount
         FROM checkouts
         LEFT JOIN products
         ON checkouts.product_id = products.id;

         RETURN totalamount;



     END; //


DELIMITER ; 

SELECT totalamount_fun();


=>List all Function
SHOW FUNCTION STATUS WHERE DB = "wdf6378";

=>Drop Function
DROP FUNCTION IF EXISTS totalamount_fun;

________________________________________________________________

=> Input Parameter(Single Parameter)

=Total Amount By Product Id
SELECT SUM(products.price * checkouts.qty) AS totalamount
FROM checkouts
LEFT JOIN products
ON checkouts.product_id = products.id
WHERE products.id = 2;

SELECT SUM(products.price * checkouts.qty) AS totalamount
FROM checkouts
LEFT JOIN products
ON checkouts.product_id = products.id
WHERE products.id = 1;

 DELIMITER //
  
      CREATE FUNCTION totalamountbyproductid_fun(p_productid INT)
      RETURNS DECIMAL DETERMINISTIC
      BEGIN

        DECLARE totalamount DECIMAL;
        SELECT SUM(products.price * checkouts.qty) 
        INTO totalamount
        FROM checkouts
        LEFT JOIN products
        ON checkouts.product_id = products.id
        WHERE products.id = p_productid;
        RETURN totalamount;



      END ; //

 DELIMITER ;


 SHOW FUNCTION STATUS WHERE DB = "wdf6378";

SELECT FUNCTION IF EXISTS totalamountbyproductid_fun(1);
SELECT FUNCTION IF EXISTS totalamountbyproductid_fun(2);
SELECT FUNCTION IF EXISTS totalamountbyproductid_fun(3); (NULL)


______________________________________________________________________

=>Input Parameter (Multi  Parameter)

=Total Amount By Currency
SELECT SUM(products.price * checkouts.qty) 
FROM checkouts
LEFT JOIN products
ON checkouts.product_id = products.id
WHERE products.id = 2 AND checkouts.payment = "mpu";


SELECT SUM(products.price * checkouts.qty) 
FROM checkouts
LEFT JOIN products
ON checkouts.product_id = products.id
WHERE products.id = 2 AND checkouts.payment = "visa";


 DELIMITER //
              
              CREATE FUNCTION totalamountbycurrency_fun(
                 p_productid INT,
                 p_payment VARCHAR(4)
              )
              RETURNS DECIMAL DETERMINISTIC
              BEGIN
                   DECLARE totalamount DECIMAL;
                    SELECT SUM(products.price * checkouts.qty) 
                    INTO totalamount
                    FROM checkouts
                    LEFT JOIN products
                    ON checkouts.product_id = products.id
                    WHERE products.id = p_productid AND checkouts.payment = p_payment;

                    RETURN totalamount;

              END; //

 DELIMITER ;


 **error
 SELECT totalamountbycurrency_fun();
 SELECT totalamountbycurrency_fun(1);

 SELECT totalamountbycurrency_fun(1,'visa');
 SELECT totalamountbycurrency_fun(1,'cod');

 SELECT totalamountbycurrency_fun(2,'visa');
 SELECT totalamountbycurrency_fun(1,'mpu');
 SELECT totalamountbycurrency_fun(1,cod);


 SHOW FUNCTION STATUS WHERE DB = 'wdf6378';




