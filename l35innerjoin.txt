=>INNER JOIN

DROP TABLE IF EXISTS orders;


Customer id is a primary key(pk) in CUSTOMERS table
order id is a primary key(pk) in ORDERs table
customer_id is a forgein key(fk) in ORDERS table.


CREATE TABLE IF NOT EXISTS orders(
id INT AUTO_INCREMENT PRIMARY KEY,
orderdate DATE,
amount DECIMAL(10,2),
customer_id INT,
FOREIGN KEY(customer_id) REFERENCES customers(id)
);



INSERT INTO orders(orderdate,amount,customer_id)
   VALUES("2021-10-11",75.35,1),
    ("2021-06-12",100.26,3),
    ("2021-07-13",13.25,2),
    ("2021-01-14",45,3);



*error = cuz customer id 20 doen't have in customer id
INSERT INTO orders(orderdate,amount,customer_id) 
     VALUE("2021/10/10",70.25,20);

SELECT * FROM orders;

INSERT INTO orders(orderdate,amount,customer_id)
  VALUE("2021/10/10",80.25,7);   

**error
INSERT INTO orders(orderdate,amount,customer_id)
  VALUE("2021/10/10",80.80,8);   

*error = cuz customer id 9 doen't have in customer id
INSERT INTO orders(orderdate,amount,customer_id)
  VALUE("2021/10/10",80.25,9);   



*error
DROP TABLE IF EXISTS customers;


*error
DELETE FROM customers WHERE id = 2;
DELETE FROM customers WHERE id = 1;

CAN DELECT = cuz cu id 4/5 are not yet recorded in orders table
DELETE FROM customers WHERE id = 4;
DELETE FROM customers WHERE id = 5;

*error 
DROP TABLE IF EXISTS customers;


DROP TABLE IF EXISTS orders;
DROP TABLE IF EXISTS customers;

_____________________________________________________________________________________________________

     INNER JOIN*******

     CREATE TABLE customers(
      id INT AUTO_INCREMENT PRIMARY KEY,
      firstname VARCHAR(20),
      lastname VARCHAR(20),
      email VARCHAR(50)
      );

    INSERT INTO customers(firstname,lastname,email)
         VALUES ('aung','aung','aungaung@gmail.com'),
         ('maung','maung','maungmaung@gmail.com'),
         ('kyaw','kyaw','kyawkyaw@gmail.com'),
         ('zaw','zaw','zawzaw@gmail.com'),
         ('su','su','susu@gmail.com'),
         ('aye','aye','ayeaye@gmail.com'),
         ('yu','yu','yuyu@gmail.com');


  CREATE TABLE IF NOT EXISTS orders(
    -> id INT AUTO_INCREMENT PRIMARY KEY,
    -> orderdate DATE,
    -> amount DECIMAL(10,2),
    -> customer_id INT,
    -> FOREIGN KEY(customer_id) REFERENCES customers(id)
    -> );
    
    INSERT INTO orders(orderdate,amount,customer_id)
    ->    VALUES("2021-10-11",75.35,1),
    ->     ("2021-06-12",100.26,3),
    ->     ("2021-07-13",13.25,2),
    ->     ("2021-01-14",45,3);



Method 1 (IMPLICIT INNER JOIN)
 SELECT * FROM customers,orders
 WHERE customers.id = orders.customer_id;   

 SELECT * FROM customers,orders
 WHERE orders.customer_id = customers.id; 

SELECT * FROM orders,customers
WHERE customers.id = orders.customer_id;   

Method 2 (EXPLICIT INNER JOIN)

     SELECT * FROM customers
     JOIN orders
     ON customers.id = orders.customer_id;


      SELECT * FROM customers
      JOIN orders
      ON orders.customer_id = customers.id;

     SELECT * FROM orders
     JOIN customers
     ON customers.id = orders.customer_id;

     SELECT * FROM orders
     JOIN customers
     ON orders.customer_id = customers.id;

Method 3

    
     SELECT * FROM customers
     INNER JOIN orders
     ON customers.id = orders.customer_id;


      SELECT * FROM customers
      INNER JOIN orders
      ON orders.customer_id = customers.id;

     SELECT * FROM orders
     INNER JOIN customers
     ON customers.id = orders.customer_id;

     SELECT * FROM orders
    INNER  JOIN customers
     ON orders.customer_id = customers.id;

___________________________________________________________________________________________________________


 SELECT * FROM orders
 WHERE customers.id = orders.customer_id;    *error

 SELECT firstname,lastname,orderdate,amount
 FROM customers,orders
 WHERE customers.id = orders.customer_id;

 SELECT firstname,lastname,orderdate,amount
 FROM customers,orders
 WHERE orders.customer_id = customers.id;

 SELECT firstname,lastname,orderdate,amount
 FROM orders,customers
 WHERE orders.customer_id = customers.id;

 SELECT firstname,lastname,orderdate,amount
 FROM orders,customers
 WHERE customers.id = orders.customer_id;




SELECT firstname,lastname,orderdate,amount
FROM customers
JOIN orders
ON customers.id = orders.customer_id;


SELECT firstname,lastname,orderdate,amount
FROM customers
JOIN orders
ON  orders.customer_id =customers.id ;


SELECT firstname,lastname,orderdate,amount
FROM orders
JOIN customers
ON  orders.customer_id =customers.id ;


SELECT firstname,lastname,orderdate,amount
FROM customers
INNER JOIN orders
ON customers.id = orders.customer_id;


_________________________________________________

=>EXE

=>ORDER BY

SELECT firstname,lastname,orderdate,amount
FROM customers
INNER JOIN orders
ON customers.id = orders.customer_id
ORDER BY orderdate DESC;


SELECT firstname,lastname,orderdate,amount AS 'Total amount'
FROM customers
INNER JOIN orders
ON customers.id = orders.customer_id
ORDER BY 'Total amount';

SELECT firstname,lastname,orderdate,amount AS Total_amount
FROM customers
INNER JOIN orders
ON customers.id = orders.customer_id
ORDER BY Total_amount;



=>GROUP BY

SELECT firstname,lastname,orderdate,amount 
FROM customers
INNER JOIN orders
ON customers.id = orders.customer_id


SELECT firstname,lastname,orderdate,amount 
FROM customers
INNER JOIN orders
ON customers.id = orders.customer_id
GROUP BY orders.customer_id;

SELECT firstname,lastname,orderdate,SUM(amount) AS totalamount
FROM customers
INNER JOIN orders
ON customers.id = orders.customer_id
GROUP BY orders.customer_id;

SELECT firstname,lastname,orderdate,SUM(amount),COUNT(*) AS totalamount
FROM customers
INNER JOIN orders
ON customers.id = orders.customer_id
GROUP BY orders.customer_id;



SELECT firstname,lastname,orderdate,SUM(amount)AS Totalamount,COUNT(*) AS totalamount
FROM customers
INNER JOIN orders
ON customers.id = orders.customer_id
GROUP BY orders.customer_id;
ORDER BY Totalamount ASC;

SELECT firstname,lastname,orderdate,SUM(amount)AS Totalamount,COUNT(*) AS totalamount 
FROM customers
INNER JOIN orders
ON customers.id = orders.customer_id
GROUP BY orders.customer_id;
OJRDER BY amount ASC;